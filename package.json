{
  "name": "vaporview",
  "publisher": "lramseyer",
  "displayName": "VaporView",
  "description": "Waveform Viewer for VS code - Supports VCD, FST, and GHW formats",
  "icon": "media/icon.png",
  "galleryBanner": {
    "color": "#202020",
    "theme": "dark"
  },
  "version": "1.4.0",
  "repository": "https://github.com/lramseyer/vaporview",
  "categories": [
    "Debuggers",
    "Visualization",
    "Other"
  ],
  "keywords": [
    "Waveform",
    "Wave",
    "Viewer",
    "VCD",
    "FST",
    "GHW",
    "FSDB",
    "Logic Simulation",
    "Logic Analyzer"
  ],
  "engines": {
    "vscode": "^1.96.0"
  },
  "main": "./dist/extension",
  "browser": "./dist/extension",
  "activationEvents": [],
  "contributes": {
    "resourceLabelFormatters": [
      {
        "scheme": "vaporview-remote",
        "formatting": {
          "label": "${path}",
          "separator": "/",
          "tildify": false,
          "workspaceSuffix": "VaporView Remote"
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vaporViewActivityBar",
          "title": "Vaporview",
          "icon": "media/activityBar.svg"
        }
      ]
    },
    "views": {
      "vaporViewActivityBar": [
        {
          "id": "waveformViewerNetlistView",
          "name": "Netlist"
        },
        {
          "id": "waveformViewerDisplayedSignalsView",
          "name": "Displayed Signals"
        }
      ]
    },
    "languages": [
      {
        "id": "wavedump",
        "extensions": [
          ".vcd",
          ".fst",
          ".ghw"
        ],
        "aliases": [
          "Waveform Dump"
        ],
        "filenames": [],
        "icon": {
          "light": "./media/wavedump_file_icon.svg",
          "dark": "./media/wavedump_file_icon.svg"
        }
      },
      {
        "id": "fsdb",
        "extensions": [
          ".fsdb"
        ],
        "aliases": [
          "Waveform Dump"
        ],
        "filenames": [],
        "icon": {
          "light": "./media/wavedump_file_icon_fsdb.svg",
          "dark": "./media/wavedump_file_icon_fsdb.svg"
        }
      }
    ],
    "customEditors": [
      {
        "viewType": "vaporview.waveformViewer",
        "displayName": "VaporView",
        "selector": [
          {
            "filenamePattern": "*.vcd"
          },
          {
            "filenamePattern": "*.fst"
          },
          {
            "filenamePattern": "*.ghw"
          },
          {
            "filenamePattern": "*.fsdb"
          }
        ]
      }
    ],
    "configuration": {
      "title": "VaporView",
      "properties": {
        "vaporview.fstMaxStaticLoadSize": {
          "type": "number",
          "default": 256,
          "minimum": 0,
          "maximum": 65536,
          "scope": "application",
          "description": "Maximum file size (in MB) to load FST files into memory. This is faster, but consumes more memory. Set to 0 to disable."
        },
        "vaporview.scrollingMode": {
          "type": "string",
          "enum": [
            "Mouse",
            "Touchpad",
            "Auto"
          ],
          "default": "Mouse",
          "scope": "application",
          "description": "Scrolling mode for the waveform viewer. Options: 'mouse' (default), 'touch'."
        },
        "vaporview.showRulerLines": {
          "type": "boolean",
          "default": "true",
          "scope": "application",
          "description": "Vertical ruler lines in the waveform viewer."
        },
        "vaporview.customColor1": {
          "type": "string",
          "default": "#cccccc",
          "scope": "application",
          "description": "Custom Color in CSS format ie '#C0FFEE' or 'rgb(192, 255, 238)' or 'blue'"
        },
        "vaporview.customColor2": {
          "type": "string",
          "default": "#dcdcaa",
          "scope": "application",
          "description": "Custom Color in CSS format ie '#C0FFEE' or 'rgb(192, 255, 238)' or 'blue'"
        },
        "vaporview.customColor3": {
          "type": "string",
          "default": "#4ec9b0",
          "scope": "application",
          "description": "Custom Color in CSS format ie '#C0FFEE' or 'rgb(192, 255, 238)' or 'blue'"
        },
        "vaporview.customColor4": {
          "type": "string",
          "default": "#9cdcfe",
          "scope": "application",
          "description": "Custom Color in CSS format ie '#C0FFEE' or 'rgb(192, 255, 238)' or 'blue'"
        },
        "vaporview.fsdbReaderLibsPath": {
          "type": "string",
          "scope": "application",
          "description": "Path to find FSDB reader shared libraries (e.g. libnffr.so, libnsys.so for Linux) for your platform. This is needed for FSDB reading. Example: /home/heyfey/verdi/2022.06/share/FsdbReader/linux64"
        }
      }
    },
    "keybindings": [
      {
        "command": "vaporview.saveViewerSettings",
        "key": "ctrl+s",
        "mac": "cmd+s",
        "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
      },
      {
        "command": "vaporview.previousEdge",
        "key": "ctrl+Left",
        "mac": "alt+Left",
        "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
      },
      {
        "command": "vaporview.nextEdge",
        "key": "ctrl+Right",
        "mac": "alt+Right",
        "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
      },
      {
        "command": "vaporview.renameSignalGroup",
        "key": "F2",
        "mac": "F2",
        "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
      },
      {
        "command": "vaporview.zoomToFit",
        "key": "ctrl+0",
        "mac": "cmd+0",
        "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
      },
      {
        "command": "vaporview.increaseVerticalScale",
        "key": "alt+=",
        "mac": "alt+=",
        "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
      },
      {
        "command": "vaporview.decreaseVerticalScale",
        "key": "alt+-",
        "mac": "alt+-",
        "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
      }
    ],
    "submenus": [
      {
        "id": "vaporview.waveDrom",
        "label": "WaveDrom",
        "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
      },
      {
        "id": "vaporview.valueFormat",
        "label": "Format Values",
        "when": "webviewSection == 'signal' && width != '1'"
      },
      {
        "id": "vaporview.renderType",
        "label": "Render Type",
        "when": "webviewSection == 'signal'"
      },
      {
        "id": "vaporview.highlightEdge",
        "label": "Edge Guides",
        "when": "webviewSection == 'signal'"
      },
      {
        "id": "vaporview.valueColor",
        "label": "Color",
        "when": "webviewSection == 'signal'"
      },
      {
        "id": "vaporview.rowHeight",
        "label": "Row Height",
        "when": "webviewSection == 'signal'"
      },
      {
        "id": "vaporview.timeUnit",
        "label": "Time Unit",
        "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "vaporview.reloadFile",
          "when": "activeCustomEditorId == 'vaporview.waveformViewer' && (resourceExtname == '.vcd' || resourceExtname == '.fst' || resourceExtname == '.ghw' || resourceExtname == '.fsdb')",
          "group": "navigation"
        }
      ],
      "editor/title/context": [
        {
          "command": "vaporview.reloadFile",
          "group": "1_open",
          "when": "activeCustomEditorId == 'vaporview.waveformViewer' && (resourceExtname == '.vcd' || resourceExtname == '.fst' || resourceExtname == '.ghw' || resourceExtname == '.fsdb')"
        }
      ],
      "view/item/context": [
        {
          "command": "vaporview.addSelected",
          "when": "viewItem == 'netlistVar' && view == 'waveformViewerNetlistView'",
          "group": "1_default@1"
        },
        {
          "command": "vaporview.removeSelectedNetlist",
          "when": "viewItem == 'netlistVar' && view == 'waveformViewerNetlistView'",
          "group": "1_default@2"
        },
        {
          "command": "vaporview.removeSelectedDisplayedSignals",
          "when": "viewItem == 'netlistVar' && view == 'waveformViewerDisplayedSignalsView'",
          "group": "1_default@3"
        },
        {
          "command": "vaporview.addAllInScopeShallow",
          "when": "viewItem == 'netlistScope'",
          "group": "1_default@4"
        },
        {
          "command": "vaporview.addAllInScopeRecursive",
          "when": "viewItem == 'netlistScope'",
          "group": "1_default@5"
        },
        {
          "command": "vaporview.removeAllInScope",
          "when": "viewItem == 'netlistScope'",
          "group": "1_default@6"
        },
        {
          "command": "vaporview.showInViewer",
          "when": "viewItem == 'netlistVar'",
          "group": "1_default@7"
        },
        {
          "command": "vaporview.copyName",
          "when": "view == 'waveformViewerNetlistView' || view == 'waveformViewerDisplayedSignalsView'",
          "group": "1_default@8"
        },
        {
          "command": "vaporview.addVariableByInstancePath",
          "when": "view == 'waveformViewerNetlistView' || view == 'waveformViewerDisplayedSignalsView'",
          "group": "2_addVariable"
        },
        {
          "command": "vaporview.saveViewerSettings",
          "when": "view == 'waveformViewerNetlistView' || view == 'waveformViewerDisplayedSignalsView'",
          "group": "3_saveLoad@1"
        },
        {
          "command": "vaporview.loadViewerSettings",
          "when": "view == 'waveformViewerNetlistView' || view == 'waveformViewerDisplayedSignalsView'",
          "group": "3_saveLoad@2"
        },
        {
          "command": "vaporview.reloadFile",
          "when": "view == 'waveformViewerNetlistView' || view == 'waveformViewerDisplayedSignalsView'",
          "group": "4_reload"
        }
      ],
      "webview/context": [
        {
          "submenu": "vaporview.timeUnit",
          "group": "1_default@1"
        },
        {
          "command": "vaporview.showRulerLines",
          "when": "webviewSection == 'ruler' && rulerLines == false && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "1_default@2"
        },
        {
          "command": "vaporview.hideRulerLines",
          "when": "webviewSection == 'ruler' && rulerLines == true && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "1_default@2"
        },
        {
          "submenu": "vaporview.valueFormat",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "1_waveform_settings@2"
        },
        {
          "submenu": "vaporview.renderType",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "1_waveform_settings@3"
        },
        {
          "submenu": "vaporview.highlightEdge",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "1_waveform_settings@4"
        },
        {
          "submenu": "vaporview.valueColor",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "1_waveform_settings@5"
        },
        {
          "submenu": "vaporview.rowHeight",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "1_waveform_settings@6"
        },
        {
          "command": "vaporview.increaseVerticalScale",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer' && isAnalog",
          "group": "1_waveform_settings@7"
        },
        {
          "command": "vaporview.decreaseVerticalScale",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer' && isAnalog",
          "group": "1_waveform_settings@8"
        },
        {
          "command": "vaporview.resetVerticalScale",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer' && isAnalog",
          "group": "1_waveform_settings@9"
        },
        {
          "command": "vaporview.removeSignal",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "2_variables@1"
        },
        {
          "command": "vaporview.showInNetlistView",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "2_variables@2"
        },
        {
          "command": "vaporview.copyName",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "2_variables@3"
        },
        {
          "command": "vaporview.copyValueAtMarker",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "2_variables@4"
        },
        {
          "command": "vaporview.newSignalGroup",
          "when": "(webviewSection == 'waveform-labels' || webviewSection == 'signal') && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "3_groups@1"
        },
        {
          "command": "vaporview.renameSignalGroup",
          "when": "webviewSection == 'signal-group' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "3_groups@2"
        },
        {
          "command": "vaporview.ungroupSignals",
          "when": "webviewSection == 'signal-group' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "3_groups@3"
        },
        {
          "command": "vaporview.deleteGroup",
          "when": "webviewSection == 'signal-group' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "3_groups@3"
        },
        {
          "command": "vaporview.saveViewerSettings",
          "group": "4_saveLoad@1",
          "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
        },
        {
          "command": "vaporview.loadViewerSettings",
          "group": "4_saveLoad@2",
          "when": "activeCustomEditorId == 'vaporview.waveformViewer'"
        },
        {
          "submenu": "vaporview.waveDrom",
          "when": "webviewSection == 'signal' && activeCustomEditorId == 'vaporview.waveformViewer'",
          "group": "5_waveDrom"
        }
      ],
      "vaporview.valueFormat": [
        {
          "command": "vaporview.displayAsBinary",
          "group": "0_default@1",
          "when": "webviewSection == 'signal' && width > '1'"
        },
        {
          "command": "vaporview.displayAsHexadecimal",
          "group": "0_default@2",
          "when": "webviewSection == 'signal' && width > '1'"
        },
        {
          "command": "vaporview.displayAsOctal",
          "group": "0_default@3",
          "when": "webviewSection == 'signal' && width > '1'"
        },
        {
          "command": "vaporview.displayAsDecimal",
          "group": "0_default@4",
          "when": "webviewSection == 'signal' && width > '1'"
        },
        {
          "command": "vaporview.displayAsDecimalSigned",
          "group": "0_default@5",
          "when": "webviewSection == 'signal' && width > '1'"
        },
        {
          "command": "vaporview.displayAsFloat",
          "group": "0_default@6",
          "when": "webviewSection == 'signal' && (width == '8' || width == '16' || width == '32' || width == '64')"
        },
        {
          "command": "vaporview.displayAsBFloat",
          "group": "0_default@7",
          "when": "webviewSection == 'signal' && width == '16'"
        },
        {
          "command": "vaporview.displayAsTFloat",
          "group": "0_default@8",
          "when": "webviewSection == 'signal' && width == '19'"
        },
        {
          "command": "vaporview.displayAsAscii",
          "group": "0_default@9",
          "when": "webviewSection == 'signal' && width > '1'"
        }
      ],
      "vaporview.valueColor": [
        {
          "command": "vaporview.defaultColor1",
          "when": "webviewSection == 'signal'",
          "group": "0_default@1"
        },
        {
          "command": "vaporview.defaultColor2",
          "when": "webviewSection == 'signal'",
          "group": "0_default@2"
        },
        {
          "command": "vaporview.defaultColor3",
          "when": "webviewSection == 'signal'",
          "group": "0_default@3"
        },
        {
          "command": "vaporview.defaultColor4",
          "when": "webviewSection == 'signal'",
          "group": "0_default@4"
        },
        {
          "command": "vaporview.customColor1",
          "when": "webviewSection == 'signal'",
          "group": "1_custom@1"
        },
        {
          "command": "vaporview.customColor2",
          "when": "webviewSection == 'signal'",
          "group": "1_custom@2"
        },
        {
          "command": "vaporview.customColor3",
          "when": "webviewSection == 'signal'",
          "group": "1_custom@3"
        },
        {
          "command": "vaporview.customColor4",
          "when": "webviewSection == 'signal'",
          "group": "1_custom@4"
        }
      ],
      "vaporview.rowHeight": [
        {
          "command": "vaporview.rowHeight1x",
          "when": "webviewSection == 'signal'",
          "group": "1_default@1"
        },
        {
          "command": "vaporview.rowHeight2x",
          "when": "webviewSection == 'signal'",
          "group": "1_default@2"
        },
        {
          "command": "vaporview.rowHeight4x",
          "when": "webviewSection == 'signal'",
          "group": "1_default@3"
        },
        {
          "command": "vaporview.rowHeight8x",
          "when": "webviewSection == 'signal'",
          "group": "1_default@3"
        }
      ],
      "vaporview.timeUnit": [
        {
          "command": "vaporview.setTimeUnitsSeconds",
          "when": "s == true",
          "group": "1_default@1"
        },
        {
          "command": "vaporview.setTimeUnitsMilliseconds",
          "when": "ms == true",
          "group": "1_default@2"
        },
        {
          "command": "vaporview.setTimeUnitsMicroseconds",
          "when": "µs == true",
          "group": "1_default@3"
        },
        {
          "command": "vaporview.setTimeUnitsNanoseconds",
          "when": "ns == true",
          "group": "1_default@4"
        },
        {
          "command": "vaporview.setTimeUnitsPicoseconds",
          "when": "ps == true",
          "group": "1_default@5"
        },
        {
          "command": "vaporview.setTimeUnitsFemtoseconds",
          "when": "fs == true",
          "group": "1_default@6"
        }
      ],
      "vaporview.renderType": [
        {
          "command": "vaporview.renderMultiBit",
          "when": "webviewSection == 'signal' && (width > '1' || type == 'Real')",
          "group": "1_default@1"
        },
        {
          "command": "vaporview.renderLinear",
          "when": "webviewSection == 'signal' && (width > '1' || type == 'Real')",
          "group": "1_default@2"
        },
        {
          "command": "vaporview.renderStepped",
          "when": "webviewSection == 'signal' && (width > '1' || type == 'Real')",
          "group": "1_default@3"
        },
        {
          "command": "vaporview.renderLinearSigned",
          "when": "webviewSection == 'signal' && (width > '1')",
          "group": "1_default@4"
        },
        {
          "command": "vaporview.renderSteppedSigned",
          "when": "webviewSection == 'signal' && (width > '1')",
          "group": "1_default@5"
        }
      ],
      "vaporview.highlightEdge": [
        {
          "command": "vaporview.annotatePosedge",
          "when": "webviewSection == 'signal' && width == '1'",
          "group": "1_default@1"
        },
        {
          "command": "vaporview.annotateNegedge",
          "when": "webviewSection == 'signal' && width == '1'",
          "group": "1_default@2"
        },
        {
          "command": "vaporview.annotateAllEdge",
          "when": "webviewSection == 'signal'",
          "group": "1_default@3"
        },
        {
          "command": "vaporview.annotateNone",
          "when": "webviewSection == 'signal'",
          "group": "1_default@4"
        }
      ],
      "vaporview.waveDrom": [
        {
          "command": "vaporview.copyWaveDrom",
          "when": "webviewSection == 'signal'"
        },
        {
          "command": "vaporview.unsetWaveDromClock",
          "when": "webviewSection == 'signal'"
        },
        {
          "command": "vaporview.setWaveDromClockRising",
          "when": "webviewSection == 'signal' && width == '1'"
        },
        {
          "command": "vaporview.setWaveDromClockFalling",
          "when": "webviewSection == 'signal' && width == '1'"
        }
      ]
    },
    "commands": [
      {
        "command": "vaporview.openFile",
        "title": "Open File with VaporView"
      },
      {
        "command": "waveformViewer.addVariable",
        "title": "Add to Waveform Viewer"
      },
      {
        "command": "waveformViewer.removeVariable",
        "title": "Remove from Waveform Viewer"
      },
      {
        "command": "waveformViewer.revealVariableInNetlistView",
        "title": "Show in Netlist View"
      },
      {
        "command": "waveformViewer.setMarker",
        "title": "Set Marker"
      },
      {
        "command": "waveformViewer.getOpenDocuments",
        "title": "Get Open Documents"
      },
      {
        "command": "waveformViewer.getViewerState",
        "title": "Get Viewer State"
      },
      {
        "command": "waveformViewer.getValuesAtTime",
        "title": "Get Values at Time"
      },
      {
        "command": "vaporview.addSelected",
        "title": "Add Selected"
      },
      {
        "command": "vaporview.addVariableByInstancePath",
        "title": "Add Variable by Name"
      },
      {
        "command": "vaporview.addAllInScopeShallow",
        "title": "Add All Variables in Scope (Shallow)"
      },
      {
        "command": "vaporview.addAllInScopeRecursive",
        "title": "Add All Variables in Scope (Recursive)"
      },
      {
        "command": "vaporview.removeSelectedNetlist",
        "title": "Remove Selected"
      },
      {
        "command": "vaporview.removeSelectedDisplayedSignals",
        "title": "Remove Selected"
      },
      {
        "command": "vaporview.removeAllInScope",
        "title": "Remove All Variables in Scope"
      },
      {
        "command": "vaporview.removeSignal",
        "title": "Remove Variable"
      },
      {
        "command": "vaporview.showInNetlistView",
        "title": "Show in Netlist View"
      },
      {
        "command": "vaporview.showInViewer",
        "title": "Show in Viewer"
      },
      {
        "command": "vaporview.copyName",
        "title": "Copy Variable Name"
      },
      {
        "command": "vaporview.copyValueAtMarker",
        "title": "Copy Value at Marker"
      },
      {
        "command": "vaporview.newSignalGroup",
        "title": "New Group"
      },
      {
        "command": "vaporview.renameSignalGroup",
        "title": "Rename Group"
      },
      {
        "command": "vaporview.ungroupSignals",
        "title": "Ungroup Signals"
      },
      {
        "command": "vaporview.deleteGroup",
        "title": "Delete Group"
      },
      {
        "command": "vaporview.displayAsBinary",
        "title": "Binary"
      },
      {
        "command": "vaporview.displayAsDecimal",
        "title": "Decimal (Unsigned)"
      },
      {
        "command": "vaporview.displayAsDecimalSigned",
        "title": "Decimal (Signed)"
      },
      {
        "command": "vaporview.displayAsHexadecimal",
        "title": "Hexadecimal"
      },
      {
        "command": "vaporview.displayAsOctal",
        "title": "Octal"
      },
      {
        "command": "vaporview.displayAsFloat",
        "title": "Floating Point"
      },
      {
        "command": "vaporview.displayAsBFloat",
        "title": "BFloat 16"
      },
      {
        "command": "vaporview.displayAsTFloat",
        "title": "TensorFloat 32"
      },
      {
        "command": "vaporview.displayAsAscii",
        "title": "ASCII"
      },
      {
        "command": "vaporview.renderMultiBit",
        "title": "Multi Bit"
      },
      {
        "command": "vaporview.renderLinear",
        "title": "Linear"
      },
      {
        "command": "vaporview.renderStepped",
        "title": "Stepped"
      },
      {
        "command": "vaporview.renderLinearSigned",
        "title": "Linear (Signed)"
      },
      {
        "command": "vaporview.renderSteppedSigned",
        "title": "Stepped (Signed)"
      },
      {
        "command": "vaporview.annotatePosedge",
        "title": "Rising Edge"
      },
      {
        "command": "vaporview.annotateNegedge",
        "title": "Falling Edge"
      },
      {
        "command": "vaporview.annotateAllEdge",
        "title": "All Edges"
      },
      {
        "command": "vaporview.annotateNone",
        "title": "None"
      },
      {
        "command": "vaporview.defaultColor1",
        "title": "Number Token Color"
      },
      {
        "command": "vaporview.defaultColor2",
        "title": "String Token Color"
      },
      {
        "command": "vaporview.defaultColor3",
        "title": "Declaration Token Color"
      },
      {
        "command": "vaporview.defaultColor4",
        "title": "Flow Control Token Color"
      },
      {
        "command": "vaporview.customColor1",
        "title": "Custom Color 1"
      },
      {
        "command": "vaporview.customColor2",
        "title": "Custom Color 2"
      },
      {
        "command": "vaporview.customColor3",
        "title": "Custom Color 3"
      },
      {
        "command": "vaporview.customColor4",
        "title": "Custom Color 4"
      },
      {
        "command": "vaporview.rowHeight1x",
        "title": "1x"
      },
      {
        "command": "vaporview.rowHeight2x",
        "title": "2x"
      },
      {
        "command": "vaporview.rowHeight4x",
        "title": "4x"
      },
      {
        "command": "vaporview.rowHeight8x",
        "title": "8x"
      },
      {
        "command": "vaporview.increaseVerticalScale",
        "title": "Increase Vertical Scale"
      },
      {
        "command": "vaporview.decreaseVerticalScale",
        "title": "Decrease Vertical Scale"
      },
      {
        "command": "vaporview.resetVerticalScale",
        "title": "Reset Vertical Scale"
      },
      {
        "command": "vaporview.setTimeUnitsSeconds",
        "title": "s"
      },
      {
        "command": "vaporview.setTimeUnitsMilliseconds",
        "title": "ms"
      },
      {
        "command": "vaporview.setTimeUnitsMicroseconds",
        "title": "µs"
      },
      {
        "command": "vaporview.setTimeUnitsNanoseconds",
        "title": "ns"
      },
      {
        "command": "vaporview.setTimeUnitsPicoseconds",
        "title": "ps"
      },
      {
        "command": "vaporview.setTimeUnitsFemtoseconds",
        "title": "fs"
      },
      {
        "command": "vaporview.showRulerLines",
        "title": "Show Ruler Lines"
      },
      {
        "command": "vaporview.hideRulerLines",
        "title": "Hide Ruler Lines"
      },
      {
        "command": "vaporview.viewVaporViewSidebar",
        "title": "View VaporView Sidebar"
      },
      {
        "command": "vaporview.copyWaveDrom",
        "title": "Copy Selection as WaveDrom"
      },
      {
        "command": "vaporview.setWaveDromClockRising",
        "title": "Set WaveDrom Clock Rising"
      },
      {
        "command": "vaporview.setWaveDromClockFalling",
        "title": "Set WaveDrom Clock Falling"
      },
      {
        "command": "vaporview.unsetWaveDromClock",
        "title": "Unset WaveDrom Clock"
      },
      {
        "command": "vaporview.saveViewerSettings",
        "title": "Save Vaporview Settings"
      },
      {
        "command": "vaporview.loadViewerSettings",
        "title": "Load Vaporview Settings"
      },
      {
        "command": "vaporview.reloadFile",
        "title": "Reload File",
        "icon": "$(sync)"
      },
      {
        "command": "vaporview.nextEdge",
        "title": "Reload File"
      },
      {
        "command": "vaporview.previousEdge",
        "title": "Reload File"
      },
      {
        "command": "vaporview.zoomToFit",
        "title": "Zoom to Fit"
      },
      {
        "command": "vaporview.openRemoteViewer",
        "title": "Open Remote Viewer"
      }
    ]
  },
  "dependencies": {
    "@vscode/codicons": "0.0.35",
    "@vscode/wasm-component-model": "1.0.2",
    "lz4js": "^0.2.0",
    "node-addon-api": "^8.3.1"
  },
  "devDependencies": {
    "@types/node": "^18.14.6",
    "@types/vscode": "1.89.0",
    "@typescript-eslint/eslint-plugin": "^7.6.0",
    "@typescript-eslint/parser": "^7.6.0",
    "concurrently": "^9.1.0",
    "esbuild": "^0.25.0",
    "eslint": "^8.57.0",
    "npm-run-all": "^4.1.5",
    "serve": "^14.2.5",
    "ts-loader": "^9.5.1",
    "typescript": "^5.7.2",
    "webpack": "^5.96.1",
    "webpack-cli": "^5.1.4"
  },
  "scripts": {
    "build": "npm run compile",
    "compile-wasm": "npm run generate:model && cargo build --target wasm32-unknown-unknown --release",
    "generate:model": "wit2ts --outDir ./src/extension_core ./wit",
    "compile-addon": "node-gyp rebuild",
    "compile": "npm run compile-wasm && npm run check-types && node esbuild.js",
    "compile-fsdb": "npm run compile-addon && npm run compile-wasm && npm run check-types && node esbuild.js",
    "check-types": "tsc --noEmit",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "vscode:prepublish": "npm run package",
    "package": "npm run compile-wasm && npm run check-types && node esbuild.js --production",
    "package-fsdb": "npm run compile-addon && npm run compile-wasm && npm run check-types && node esbuild.js --production"
  }
}
